{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","e","onChangeFilter","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","onClick","onRemoveExpense","ExpensesList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedDate","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","stopEditingHandler","NewExpense","isEditing","setIsEditing","newExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","exp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf74adb7.chunk.js","sourcesContent":["import './Card.css'\nfunction Card(props) {\n  const classes = 'card ' + props.className\n  return <div className={classes}>{props.children}</div>\n}\n\nexport default Card\n","import React from 'react'\nimport './ExpensesFilter.css'\nconst ExpensesFilter = props => {\n  const changeDateHandler = e => {\n    props.onChangeFilter(e.target.value)\n  }\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={changeDateHandler} value={props.selected}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default ExpensesFilter\n","import './ExpenseDate.css'\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString('en-US', { month: 'long' })\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' })\n  const year = props.date.getFullYear()\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  )\n}\n\nexport default ExpenseDate\n","import Card from '../UI/Card'\nimport ExpenseDate from './ExpenseDate'\nimport './ExpenseItem.css'\n\nfunction ExpenseItem(props) {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n          <button\n            className=\"expense-item__remove\"\n            onClick={() => {\n              props.onRemoveExpense(props)\n            }}\n          >\n            x\n          </button>\n        </div>\n      </Card>\n    </li>\n  )\n}\n\nexport default ExpenseItem\n","import ExpenseItem from './ExpenseItem'\nimport './ExpensesList.css'\n\nconst ExpensesList = props => {\n  if (props.expenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.expenses.map(expense => (\n        <ExpenseItem\n          key={expense.id}\n          id={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n          onRemoveExpense={props.onRemoveExpense}\n        />\n      ))}\n    </ul>\n  )\n}\n\nexport default ExpensesList\n","import './ChartBar.css'\n\nconst ChartBar = props => {\n  let barFillHeight = '0%'\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  )\n}\n\nexport default ChartBar\n","import './Chart.css'\nimport ChartBar from './ChartBar'\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\n  const totalMaximum = Math.max(...dataPointValues)\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map(dataPoint => {\n        return (\n          <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Chart\n","import Chart from '../Chart/Chart'\nconst ExpensesChart = props => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ]\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth()\n    chartDataPoints[expenseMonth].value += expense.amount\n  }\n\n  return <Chart dataPoints={chartDataPoints} />\n}\n\nexport default ExpensesChart\n","import { useState } from 'react'\nimport Card from '../UI/Card'\nimport './Expenses.css'\nimport ExpensesFilter from './ExpensesFilter'\nimport ExpensesList from './ExpensesList'\nimport ExpensesChart from './ExpensesChart'\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState('2022')\n\n  const filterChangeHandler = selectedDate => {\n    setFilteredYear(selectedDate)\n  }\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear\n  })\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter onChangeFilter={filterChangeHandler} selected={filteredYear} />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList expenses={filteredExpenses} onRemoveExpense={props.onRemoveExpense} />\n      </Card>\n    </div>\n  )\n}\n\nexport default Expenses\n","import { useState } from 'react'\nimport './ExpenseForm.css'\n\nconst ExpenseForm = props => {\n  const [enteredTitle, setEnteredTitle] = useState('')\n  const [enteredAmount, setEnteredAmount] = useState('')\n  const [enteredDate, setEnteredDate] = useState('')\n\n  const titleChangeHandler = e => {\n    setEnteredTitle(e.target.value)\n  }\n\n  const amountChangeHandler = e => {\n    setEnteredAmount(e.target.value)\n  }\n\n  const dateChangeHandler = e => {\n    setEnteredDate(e.target.value)\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    }\n    props.onSaveExpenseData(expenseData)\n    setEnteredAmount('')\n    setEnteredDate('')\n    setEnteredTitle('')\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} value={enteredDate} />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.stopEditingHandler}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  )\n}\n\nexport default ExpenseForm\n","import { useState } from 'react'\nimport './NewExpense.css'\nimport ExpenseForm from './ExpenseForm'\n\nconst NewExpense = props => {\n  const [isEditing, setIsEditing] = useState(true)\n\n  const onSaveExpenseData = enteredExpenseData => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    }\n    props.onAddExpense(expenseData)\n    setIsEditing(true)\n  }\n\n  function startEditingHandler() {\n    setIsEditing(false)\n  }\n\n  function stopEditingHandler() {\n    setIsEditing(true)\n  }\n\n  const newExpense = isEditing ? (\n    <button onClick={startEditingHandler}>Add New Expense</button>\n  ) : (\n    <ExpenseForm onSaveExpenseData={onSaveExpenseData} stopEditingHandler={stopEditingHandler} />\n  )\n\n  return <div className=\"new-expense\">{newExpense}</div>\n}\n\nexport default NewExpense\n","import { useState } from 'react'\nimport Expenses from './components/Expenses/Expenses'\nimport NewExpense from './components/NewExpense/NewExpense'\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n]\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    })\n  }\n\n  function removeExpenseHandler(expense) {\n    setExpenses(\n      expenses.filter(exp => {\n        return exp.id !== expense.id\n      })\n    )\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} onRemoveExpense={removeExpenseHandler} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}